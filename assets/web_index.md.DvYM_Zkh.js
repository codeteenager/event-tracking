import{_ as a,c as e,o as l,a5 as i}from"./chunks/framework.D8ZcJidb.js";const m=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"web/index.md","filePath":"web/index.md","lastUpdated":1722156138000}'),t={name:"web/index.md"},r=i('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><h2 id="什么是埋点" tabindex="-1">什么是埋点 <a class="header-anchor" href="#什么是埋点" aria-label="Permalink to &quot;什么是埋点&quot;">​</a></h2><p>埋点，它的学名是事件追踪(Event Tracking)，主要是针对特定用户行为或业务过程进行捕获、处理和发送的相关技术及实施过程。埋点是数据领域的一个专业术语，也是互联网领域的一个俗称。埋点是产品数据分析的基础，一般用于推荐系统的反馈、用户行为的监控和分析、新功能或者运营活动效果的统计分析等。 埋点包含两个重要概念：事件(event)，属性(param)</p><ul><li><code>事件（event）：应用中发生了什么，例如用户操作、系统事件或系统错误。</code> 以你拍一产品为例，包含以下事件：enter_practice_after_class(进入课后练习)、leave_practice_after_class(离开课后练习)。</li><li><code>属性（param）：为了描述用户群细分而定义的属性，例如语言偏好或地理位置。</code> 以“进入课后练习”事件为例，它包含如下事件属性：enter_from(从哪个页面来)，class_id(课程id)等。</li><li><code> 属性值（value）：属性的维度，即行为触发时的具体维度。</code> 例如：enter_from：home(主页)、system(系统课)等。</li></ul><h2 id="前端监控和埋点系统有什么区别" tabindex="-1">前端监控和埋点系统有什么区别？ <a class="header-anchor" href="#前端监控和埋点系统有什么区别" aria-label="Permalink to &quot;前端监控和埋点系统有什么区别？&quot;">​</a></h2><p>监控系统统计出来的数据都是属于客观存在的，如：流量数据，错误日志，性能数据等等，这些数据跟人的主观意识毫无关系，不会因为产品经理或分析师给你提了一个需求而改变。因此我们只需要引入探针代码就可以将这些数据上报进行分析了。</p><p>而埋点系统则与监控系统有着明显的不同，埋点系统就是为了帮助产品经理、分析师统计业务数据而生的。原则上，无论监控系统做的多么强大，都无法覆盖场景复杂的业务数据统计。</p><p>比如：商品页面，用户从 登录-&gt;浏览商品-&gt;加入购物车-&gt;点击购买按钮-&gt;付款确认 ，这个过程中，每一个步骤的流失率，留存率是多少，如何优化。 这些跟业务强相关的数据，监控是很难做到的，这就需要埋点来完成了。</p><h2 id="常见的埋点方案" tabindex="-1">常见的埋点方案 <a class="header-anchor" href="#常见的埋点方案" aria-label="Permalink to &quot;常见的埋点方案&quot;">​</a></h2><h3 id="代码埋点" tabindex="-1">代码埋点 <a class="header-anchor" href="#代码埋点" aria-label="Permalink to &quot;代码埋点&quot;">​</a></h3><p>代码埋点是在应用程序或网站中手动添加跟踪代码来捕获特定事件或用户行为数据的方式。通常，开发者会在关键的业务逻辑和界面交互位置植入跟踪代码，以便能够记录和上报用户行为数据。</p><p><strong>优点</strong></p><ul><li>可以灵活地跟踪任意事件和数据，方便对各个业务线的数据进行跟踪。</li><li>数据精准度高，可以准确地记录用户的行为和操作。</li><li>可以实时监控数据变化，及时响应数据的异常情况。</li></ul><p><strong>缺点</strong></p><ul><li>工作量较大，对于大型应用程序和网站需要投入大量的人力和时间。</li><li>如果需要更改或添加跟踪代码，可能需要重新编译应用程序或网站，上线时间较长。</li><li>如果跟踪代码出错或不稳定，可能会影响应用程序或网站的稳定性和性能。</li></ul><h3 id="全埋点" tabindex="-1">全埋点 <a class="header-anchor" href="#全埋点" aria-label="Permalink to &quot;全埋点&quot;">​</a></h3><p>全埋点是一种自动化的数据埋点方式，也叫无埋点、无痕埋点、自动埋点，通过在应用程序或网站中集成第三方数据分析工具的SDK或API来捕获和分析用户行为数据。全埋点不需要手动添加跟踪代码或日志记录，而是通过集成第三方工具来实现数据采集和分析。</p><p><strong>优点</strong></p><ul><li>自动化程度高，可以快速部署和实施。</li><li>可以自动记录大量的用户行为数据，并且可以实时传输和存储数据。</li><li>可以跨平台和跨应用采集和分析数据，方便多个团队协作和分析数据。</li></ul><p><strong>缺点</strong></p><ul><li>如果第三方工具出错或不稳定，可能会影响应用程序或网站的稳定性和性能。</li><li>需要向第三方工具提供数据隐私和敏感信息，因此需要选择可信赖的第三方工具。</li><li>数据量较大，需要专门的数据处理和存储方案，对于非技术人员来说有一定的难度。</li></ul><h3 id="可视化埋点" tabindex="-1">可视化埋点 <a class="header-anchor" href="#可视化埋点" aria-label="Permalink to &quot;可视化埋点&quot;">​</a></h3><p>可视化埋点是一种新型的数据埋点方式，它通过在应用程序或网站中使用可视化工具来捕获和分析用户行为数据。可视化埋点不需要手动添加跟踪代码或日志记录，而是通过可视化工具来实现数据采集和分析。</p><p><strong>优点</strong></p><ul><li>可视化埋点可以快速部署和实施，不需要手动添加跟踪代码或日志记录。</li><li>可视化工具通常提供了直观的数据展示界面，方便分析人员查看和理解数据。</li><li>可以跨平台和跨应用采集和分析数据，方便多个团队协作和分析数据。</li><li>可以自动生成跟踪代码和日志记录，方便后续的数据分析和优化。</li><li>可视化埋点支持自定义事件跟踪和数据分析，可以根据业务需求灵活调整和扩展。</li></ul><p><strong>缺点</strong></p><ul><li>可视化工具通常是基于通用协议和标准开发的，因此可能无法满足特定应用程序或网站的需求。</li><li>可视化工具的质量和性能可能存在差异，需要选择可靠的工具和服务商。</li><li>可视化工具可能需要定期更新和维护，以确保数据的准确性和可靠性。</li><li>可视化工具可能需要额外的成本和时间来集成到应用程序或网站中。</li><li>可视化埋点需要考虑到数据的隐私和安全问题，确保数据的合法性和安全性。</li></ul>',27),o=[r];function n(s,d,c,h,p,_){return l(),e("div",null,o)}const f=a(t,[["render",n]]);export{m as __pageData,f as default};
